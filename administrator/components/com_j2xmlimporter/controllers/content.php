<?php/** * controllers/content.php * * @package		J2XMLImporter * @subpackage	com_j2xmlimporter * @version		1.6.0 * @since		File available since Release v1.5.3 * * @author		Helios Ciancio <info@eshiol.it> * @link		http://www.eshiol.it * @copyright	Copyright (C) 2010 Helios Ciancio. All Rights Reserved * @license		http://www.gnu.org/licenses/gpl-3.0.html GNU/GPL v3 * J2XMLImporter is free software. This version may have been modified pursuant * to the GNU General Public License, and as distributed it includes or * is derivative of works licensed under the GNU General Public License or * other free or open source software licenses. */ // no direct accessdefined('_JEXEC') or die('Restricted access.');jimport('joomla.application.component.controller');// Includes the required class file for the XML-RPC Clientjimport('phpxmlrpc.xmlrpc');require_once (JPATH_COMPONENT.DS.'helpers'.DS.'importer.php');class J2XMLImporterControllerContent extends JController{	private static $messages = array(		0 => 'COM_J2XMLIMPORTER_MSG_ARTICLE_IMPORTED',		1 => 'COM_J2XMLIMPORTER_MSG_ARTICLE_NOT_IMPORTED',		2 => 'COM_J2XMLIMPORTER_MSG_USER_IMPORTED',		3 => 'COM_J2XMLIMPORTER_MSG_USER_NOT_IMPORTED',		4 => 'COM_J2XMLIMPORTER_MSG_SECTION_IMPORTED',		5 => 'COM_J2XMLIMPORTER_MSG_SECTION_NOT_IMPORTED',		6 => 'COM_J2XMLIMPORTER_MSG_CATEGORY_IMPORTED',		7 => 'COM_J2XMLIMPORTER_MSG_CATEGORY_NOT_IMPORTED',		8 => 'FOLDER_WAS_SUCCESSFULLY_CREATED',		9 => 'ERROR_CREATING_FOLDER',		10 => 'COM_J2XMLIMPORTER_MSG_IMAGE_IMPORTED',		11 => 'COM_J2XMLIMPORTER_MSG_IMAGE_NOT_IMPORTED'									);		private static $codes = array(		0 => 'message',		1 => 'notice',		2 => 'message',		3 => 'notice',		4 => 'message',		5 => 'notice',		6 => 'message',		7 => 'notice',		8 => 'notice',		9 => 'error',		10 => 'message',		11 => 'notice'		);			function __construct($default = array())	{		parent::__construct();	}			function import()	{		// Check for request forgeries		JRequest::checkToken() or jexit('Invalid Token');				$app =& JFactory::getApplication('administrator');		$msg='';		$db =& JFactory::getDBO();		$date = JFactory::getDate();		$now = $date->toMYSQL();		$params =& JComponentHelper::getParams('com_j2xmlimporter');		libxml_use_internal_errors(true);				//Retrieve file details from uploaded file, sent from upload form:		$file = JRequest::getVar('file_upload', null, 'files', 'array');				// check if file is compressed	    $path_info = pathinfo($file['name']);		if ($path_info['extension'] == 'gz')		{			$data = gzfile($file['tmp_name']);			$xml = simplexml_load_string(implode($data));		}		else			$xml = simplexml_load_file($file['tmp_name']);				if (!$xml)		{			$errors = libxml_get_errors();			foreach ($errors as $error) {				$msg = $error->code.' - '.JText::_($error->message);			    switch ($error->level) {		    	default:		        case LIBXML_ERR_WARNING:		        	$app->enqueueMessage($msg,'message');		            break;		         case LIBXML_ERR_ERROR:		        	$app->enqueueMessage($msg,'notice');		            break;		        case LIBXML_ERR_FATAL:		        	$app->enqueueMessage($msg,'error');		            break;			    }			}			libxml_clear_errors();		}		if(!isset($xml['version']))   			$app->enqueueMessage(JText::sprintf('COM_J2XMLIMPORTER_MSG_FILE_FORMAT_UNKNOWN'),'error');		else 		{			require_once (JPATH_COMPONENT.DS.'helpers'.DS.'importer.php');						$xmlVersion = $xml['version'];			$version = explode(".", $xmlVersion);			$xmlVersionNumber = $version[0].$version[1].substr('0'.$version[2], strlen($version[2])-1); 				if ($xmlVersionNumber == 1501)				j2xmlImporter::import($xml,1501);			elseif ($xmlVersionNumber == 1503)				j2xmlImporter::import($xml,1503);			else				$app->enqueueMessage(JText::sprintf('COM_J2XMLIMPORTER_MSG_FILE_FORMAT_NOT_SUPPORTED', $xmlVersion),'error');		}			$this->setRedirect('index.php?option=com_j2xmlimporter');		}}?>